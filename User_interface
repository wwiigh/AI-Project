import tkinter as tk

class RecipeImproviserApp:
    def __init__(self, master):
        self.master = master
        master.title("Recipe Improviser")

        self.conversation_log = tk.Text(master, height=10, width=50)
        self.conversation_log.pack()

        self.user_input = tk.Entry(master)
        self.user_input.pack()

        self.submit_button = tk.Button(master, text="Submit", command=self.process_input)
        self.submit_button.pack()

        self.messages = [
            "Hello, welcome to the recipe improviser. Could you please tell me what is the name of the dish you would like to make? Please say no if you don't know the name of the dish.",           
            "Could you please tell me what the main ingredients are in the dish you would like to make? For example, what type of meat or vegetables.",
            "How is it seasoned? Does it contain any spices?",
            "How would you like to cook the dish? For example, bake, fry, steam, boil, grill, or deep fry etc.",
            "Thank you! Before improvising a recipe, may I know are you allergic to any food, or do you have any special demands I should know in prior?"
        ]
        self.message_index = 0

        self.responses = []  # List to store user responses

        self.update_conversation(self.messages[self.message_index])

    def process_input(self):
        user_response = self.user_input.get()
        self.responses.append(user_response)  # Store user response

        if self.message_index < len(self.messages) - 1:
            self.update_conversation("User: " + user_response)
            self.message_index += 1
            self.update_conversation(self.messages[self.message_index])
            self.user_input.delete(0, tk.END)
        else:
            self.update_conversation("Thank you for providing the information. Recipe improvising is starting!")
            self.master.after(2000, self.master.destroy)
            # Here you could add code to save the responses to a file or process them further

    def update_conversation(self, message):
        self.conversation_log.insert(tk.END, message + "\n")
        self.conversation_log.see(tk.END)

def main():
    root = tk.Tk()
    app = RecipeImproviserApp(root)
    root.mainloop()
    print(app.responses)

if __name__ == "__main__":
    main()
